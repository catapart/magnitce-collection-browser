var v=`:host
{
    --border-color: rgb(205 205 205);

    display: grid;
    border: solid 1px var(--border-color);
}
@media (prefers-color-scheme: dark) 
{
    :host
    {
        --border-color: rgb(81 81 81);
    }
}

[part="navigation"]
{
    border-right: solid 1px var(--border-color);
}
[part="categories"] > ::slotted(*)
{
    padding: var(--category-padding, 5px 15px);
}

[part="gallery"]
{
    margin: 0;
    display: grid;
    grid-template-rows: auto 1fr;
    /* gap: 1em; */
    user-select: none;
    overflow: auto;
}

[part="header"]
{
    display: grid;
    grid-template-columns: 1fr auto;
    align-items: center;

    border-bottom: solid 1px var(--border-color);
}

[part="items"]
{
    padding: 0;
    margin: 0;
    list-style: none;

    display: grid;
    grid-template-columns: repeat(auto-fill, var(--item-width, minmax(0, 100px)));
    /* grid-column-gap: var(--column-gap, 1em);
    grid-row-gap: var(--row-gap, 1em); */
}


::slotted(:not([slot]))
{
    border: solid 1px transparent;
    margin: 3px 7px;
}

::slotted(:not([slot]):focus)
{
    border-color: rgb(205 205 205);
}
::slotted(:not([slot]):hover)
{
    background-color: var(--background-color-hover, rgb(221, 221, 221));
}
::slotted(:not([slot]).selected)
{
    background-color: var(--background-color-selected, highlight);
    color: var(--color-selected, highlighttext);
}
@media (prefers-color-scheme: dark) 
{
    ::slotted(:not([slot]):hover)
    {
        --background-color-hover: rgb(197, 197, 197);
    }
}

[part="add-button"]
{
    align-self: center;
    justify-self: flex-end;
    margin: .5em 1em;
}


@media (max-width: 800px) 
{
    
}
@media (min-width: 800px) 
{
    :host
    {
        display: grid;
        grid-template-columns: auto 1fr;
    }
}`;var b=`<nav part="navigation">
    <slot name="navigation-header">
        <header part="navigation-header">
            <slot name="navigation-header-content"></slot>
        </header>
    </slot>
    <selectable-items part="categories"><slot name="category"></slot></selectable-items>
</nav>
<div part="gallery">
    <slot name="header">
        <header part="header">
            <slot name="header-content">
            </slot>
            <slot name="add-button">
                <button part="add-button">
                    <slot name="add-button-content">
                        <span part="add-button-icon">+</span>
                        <span part="add-button-label">Add Item</span>
                    </slot>
                </button>
            </slot>
        </header>
    </slot>
    <div part="items">
        <slot></slot>
    </div>
</div>`;var x=`:host { user-select: none; }
::slotted(*)
{
    user-select: none;
    cursor: pointer;
}
::slotted(:hover)
{
    background-color: var(--background-color-hover, rgb(221, 221, 221));
}
::slotted(.selected)
{
    background-color: var(--background-color-selected, highlight);
    color: var(--color-selected, highlighttext);
}
@media (prefers-color-scheme: dark) 
{
    ::slotted(:hover)
    {
        --background-color-hover: rgb(197, 197, 197);
    }
}`,S=new CSSStyleSheet;S.replaceSync(x);document.addEventListener("keydown",n=>{if(u.multipleModifierKeys.indexOf(n.code)>-1){u._multipleModifierActive=!0;return}});document.addEventListener("keyup",n=>{u.multipleModifierKeys.indexOf(n.code)>-1&&(u._multipleModifierActive=u.multipleModifierActive)});var E="selectable-items",u=class h extends HTMLElement{static observedAttributes=[];static _multipleModifierActive=!1;static multipleModifierKeys=["ShiftLeft","ShiftRight","ControlLeft","ControlRight"];static multipleModifierActive=!1;static selectKeys=["Enter","Space"];static selectedClassName="selected";selected=()=>[...this.querySelectorAll(`.${h.selectedClassName}`)];constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="<slot></slot>",this.shadowRoot.adoptedStyleSheets.push(S),this.addEventListener("click",e=>{let s,o=e.composedPath();for(let t=0;t<o.length;t++){let a=o[t];a.parentElement==this&&(s=a.tagName=="SLOT"?a.assignedElements().find(i=>o.indexOf(i)>-1):a)}s!=null&&this.selectItem(s)}),this.addEventListener("keydown",e=>{h.selectKeys.indexOf(e.code)>-1&&(this.selectItem(e.target),e.preventDefault())}),this.shadowRoot.querySelector("slot").addEventListener("slotchange",e=>{let s=e.target.assignedElements();for(let o=0;o<s.length;o++)s[o].hasAttribute("tabIndex")||s[o].setAttribute("tabIndex","0")})}selectItem(e){let s=this.getAttribute("multiple")??this.getAttribute("multi");(h._multipleModifierActive==!1||s==null)&&[...(e.parentElement??this).children].reduce((t,a,i)=>(a.classList.contains(h.selectedClassName)&&t.push(a),t),new Array).forEach(t=>t.classList.remove(h.selectedClassName)),e.classList.add(h.selectedClassName),this.dispatchEvent(new Event("change"))}};customElements.get(E)==null&&customElements.define(E,u);var T=(n=>n)(T||{}),L=new CSSStyleSheet;L.replaceSync(v);var y="collection-browser",f=class n extends HTMLElement{componentParts=new Map;getPart(e){if(this.componentParts.get(e)==null){let s=this.shadowRoot.querySelector(`[part="${e}"]`);s!=null&&this.componentParts.set(e,s)}return this.componentParts.get(e)}findPart(e){return this.shadowRoot.querySelector(`[part="${e}"]`)}get selected(){return this.#e()}#e=()=>[...this.shadowRoot.querySelector("slot:not([name])").assignedElements().reduce((e,s,o)=>(s.classList.contains("selected")&&e.push(s),e),new Array)];get allowMultiSelect(){return this.hasAttribute("multi")||this.hasAttribute("multiple")}handledItems=new WeakSet;constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=b,this.shadowRoot.adoptedStyleSheets.push(L);let e=[];this.shadowRoot.querySelector("selectable-items").addEventListener("change",s=>{s.preventDefault(),s.stopPropagation();let t=[...this.querySelectorAll('[slot="category"]')].find(d=>d.classList.contains("selected")),a=new CustomEvent("category",{cancelable:!0,detail:{previousSelection:e,newSelection:t}}),i=this.dispatchEvent(a);if(t==null?e=[]:e=[t],i==!1||t==null)return;let c=t.dataset.category;if(c==null||c.trim()=="")return;this.dataset.category=c;let m=[...this.querySelectorAll(":not([slot])")];for(let d=0;d<m.length;d++){let r=m[d];if(r.classList.remove("has-category"),!(r.dataset.category==null||r.dataset.category.trim()==""))if(r.dataset.category==c)r.classList.add("has-category");else{let p=r.dataset.category.split(",");for(let l=0;l<p.length;l++)if(p[l]==c){r.classList.add("has-category");break}}}}),this.shadowRoot.querySelector("slot:not([name])").addEventListener("slotchange",s=>{let o=s.target.assignedElements();for(let t=0;t<o.length;t++)this.handledItems.has(o[t])||o[t].addEventListener("click",a=>{a.stopPropagation();let i=o.reduce((l,g,A)=>(g.classList.contains(n.selectedClassName)&&g!=o[t]&&l.push(g),l),new Array),c=a.getModifierState("Shift"),m=a.getModifierState("Control"),d=a.getModifierState("Alt"),r=new CustomEvent("change",{cancelable:!0,detail:{newSelection:o[t],previousSelection:i,shift:c,ctrl:m,alt:d}});if(this.dispatchEvent(r)!=!1){if(this.allowMultiSelect==!1)for(let l=0;l<i.length;l++)i[l].classList.remove(n.selectedClassName);o[t].classList.toggle(n.selectedClassName)}})})}static selectedClassName="selected";clearSelection(){this.dispatchEvent(new CustomEvent("change",{detail:{newSelection:null,previousSelection:this.selected,shift:!1,ctrl:!1,alt:!1}}))}};customElements.get(y)==null&&customElements.define(y,f);export{f as CollectionBrowserElement,T as CollectionBrowserParts};
