var f=`:host\r
{\r
    --border-color: rgb(205 205 205);\r
\r
    display: grid;\r
    border: solid 1px var(--border-color);\r
}\r
@media (prefers-color-scheme: dark) \r
{\r
    :host\r
    {\r
        --border-color: rgb(81 81 81);\r
    }\r
}\r
\r
[part="navigation"]\r
{\r
    border-right: solid 1px var(--border-color);\r
}\r
[part="categories"] > ::slotted(*)\r
{\r
    padding: var(--category-padding, 5px 15px);\r
}\r
\r
[part="gallery"]\r
{\r
    margin: 0;\r
    display: grid;\r
    grid-template-rows: auto 1fr;\r
    /* gap: 1em; */\r
    user-select: none;\r
    overflow: auto;\r
}\r
\r
[part="header"]\r
{\r
    display: grid;\r
    grid-template-columns: 1fr auto;\r
    align-items: center;\r
\r
    border-bottom: solid 1px var(--border-color);\r
}\r
\r
[part="items"]\r
{\r
    padding: 0;\r
    margin: 0;\r
    list-style: none;\r
\r
    display: grid;\r
    grid-template-columns: repeat(auto-fill, var(--item-width, minmax(0, 100px)));\r
    /* grid-column-gap: var(--column-gap, 1em);\r
    grid-row-gap: var(--row-gap, 1em); */\r
}\r
\r
\r
::slotted(:not([slot]))\r
{\r
    border: solid 1px transparent;\r
    margin: 3px 7px;\r
}\r
\r
::slotted(:not([slot]):focus)\r
{\r
    border-color: rgb(205 205 205);\r
}\r
::slotted(:not([slot]):hover)\r
{\r
    background-color: var(--background-color-hover, rgb(221, 221, 221));\r
}\r
::slotted(:not([slot]).selected)\r
{\r
    background-color: var(--background-color-selected, highlight);\r
    color: var(--color-selected, highlighttext);\r
}\r
@media (prefers-color-scheme: dark) \r
{\r
    ::slotted(:not([slot]):hover)\r
    {\r
        --background-color-hover: rgb(197, 197, 197);\r
    }\r
}\r
\r
[part="add-button"]\r
{\r
    align-self: center;\r
    justify-self: flex-end;\r
    margin: .5em 1em;\r
}\r
\r
\r
@media (max-width: 800px) \r
{\r
    \r
}\r
@media (min-width: 800px) \r
{\r
    :host\r
    {\r
        display: grid;\r
        grid-template-columns: auto 1fr;\r
    }\r
}`;var E=`<nav id="navigation">\r
    <slot name="navigation-header">\r
        <header id="navigation-header" class="header">\r
            <slot name="navigation-header-content"></slot>\r
        </header>\r
    </slot>\r
    <selectable-items id="categories"><slot name="category"></slot></selectable-items>\r
</nav>\r
<div id="gallery">\r
    <slot name="header">\r
        <header id="gallery-header" class="header">\r
            <slot name="header-content"></slot>\r
            <slot name="add-button">\r
                <button id="add-button" class="button">\r
                    <slot name="add-button-content">\r
                        <span id="add-button-icon" class="icon">+</span>\r
                        <span id="add-button-label">Add Item</span>\r
                    </slot>\r
                </button>\r
            </slot>\r
        </header>\r
    </slot>\r
    <div id="items">\r
        <slot></slot>\r
    </div>\r
</div>`;var w=`:host { user-select: none; }
::slotted(*)
{
    user-select: none;
    cursor: pointer;
}
::slotted(:hover)
{
    background-color: var(--background-color-hover, rgb(221, 221, 221));
}
::slotted(.selected)
{
    background-color: var(--background-color-selected, highlight);
    color: var(--color-selected, highlighttext);
}
@media (prefers-color-scheme: dark) 
{
    ::slotted(:hover)
    {
        --background-color-hover: rgb(197, 197, 197);
    }
}`,b=new CSSStyleSheet;b.replaceSync(w);document.addEventListener("keydown",i=>{if(m.multipleModifierKeys.indexOf(i.code)>-1){m._multipleModifierActive=!0;return}});document.addEventListener("keyup",i=>{m.multipleModifierKeys.indexOf(i.code)>-1&&(m._multipleModifierActive=m.multipleModifierActive)});var v="selectable-items",m=class h extends HTMLElement{static observedAttributes=[];static _multipleModifierActive=!1;static multipleModifierKeys=["ShiftLeft","ShiftRight","ControlLeft","ControlRight"];static multipleModifierActive=!1;static selectKeys=["Enter","Space"];static selectedClassName="selected";selected=()=>[...this.querySelectorAll(`.${h.selectedClassName}`)];handledItems=new WeakSet;constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML="<slot></slot>",this.shadowRoot.adoptedStyleSheets.push(b),this.shadowRoot.querySelector("slot").addEventListener("slotchange",t=>{let s=t.target.assignedElements();for(let l=0;l<s.length;l++)this.handledItems.has(s[l])||s[l].tagName.toLowerCase()=="slot"||(s[l].setAttribute("tabIndex","0"),s[l].addEventListener("keydown",e=>{h.selectKeys.indexOf(e.code)>-1&&this.selectItem(e.currentTarget)}),s[l].addEventListener("click",e=>{this.selectItem(e.currentTarget)}),this.handledItems.add(s[l]))})}selectItem(t){let s=this.getAttribute("multiple")??this.getAttribute("multi");(h._multipleModifierActive==!1||s==null)&&[...(t.parentElement??this).children].reduce((e,n,u)=>(this.handledItems.has(n)&&n.classList.contains(h.selectedClassName)&&e.push(n),e),new Array).forEach(e=>e.classList.remove(h.selectedClassName)),t.classList.add(h.selectedClassName),this.dispatchEvent(new Event("change"))}};customElements.get(v)==null&&customElements.define(v,m);var x=(i=>i)(x||{}),y=new CSSStyleSheet;y.replaceSync(f);var S="collection-browser",p=class i extends HTMLElement{static selectedClassName="selected";componentParts=new Map;getElement(t){if(this.componentParts.get(t)==null){let s=this.findElement(t);s!=null&&this.componentParts.set(t,s)}return this.componentParts.get(t)}findElement(t){return this.shadowRoot.getElementById(t)}get allowMultiSelect(){return this.hasAttribute("multi")||this.hasAttribute("multiple")}#e;#t;constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=E,this.shadowRoot.adoptedStyleSheets.push(y),this.#t=(s=>{let l=this.#e.assignedElements();if(l.length==1&&l[0]instanceof HTMLSlotElement){let e=l[0],n=e.assignedElements();for(;e instanceof HTMLSlotElement&&n[0]instanceof HTMLSlotElement;)e=n[0],e instanceof HTMLSlotElement&&(n=e.assignedElements());this.#n("default",e);return}}).bind(this),this.#e=this.shadowRoot.querySelector("slot:not([name])"),this.#e.addEventListener("slotchange",this.#t);let t=[];this.shadowRoot.querySelector("selectable-items").addEventListener("change",s=>{s.preventDefault(),s.stopPropagation();let e=[...this.querySelectorAll('[slot="category"]')].find(c=>c.classList.contains("selected")),n=new CustomEvent("category",{cancelable:!0,detail:{previousSelection:t,newSelection:e}}),u=this.dispatchEvent(n);if(e==null?t=[]:t=[e],u==!1||e==null)return;let d=e.dataset.category;if(d==null||d.trim()=="")return;this.dataset.category=d;let g=[...this.querySelectorAll(":not([slot])")];for(let c=0;c<g.length;c++){let r=g[c];if(r.classList.remove("has-category"),!(r.dataset.category==null||r.dataset.category.trim()==""))if(r.dataset.category==d)r.classList.add("has-category");else{let o=r.dataset.category.split(",");for(let a=0;a<o.length;a++)if(o[a]==d){r.classList.add("has-category");break}}}}),this.findElement("gallery").addEventListener("click",s=>{s.stopPropagation();let l=this.#e.assignedElements(),e=s.composedPath().find(o=>o instanceof Element&&l.indexOf(o)!=-1);if(e==null||!(e instanceof HTMLElement))return;let n=l.reduce((o,a,L)=>(a.classList.contains(i.selectedClassName)&&a!=e&&o.push(a),o),new Array),u=s.getModifierState("Shift"),d=s.getModifierState("Control"),g=s.getModifierState("Alt"),c=new CustomEvent("change",{cancelable:!0,detail:{newSelection:e,previousSelection:n,shift:u,ctrl:d,alt:g}});if(this.dispatchEvent(c)!=!1){if(this.allowMultiSelect==!1)for(let o=0;o<n.length;o++){let a=n[o];this.#s(a)}this.#o(e)}})}#n(t,s){if(t=="default"){this.#e!=null&&this.#e.removeEventListener("slotchange",this.#t),this.#e=s,this.#e.addEventListener("slotchange",this.#t);let l=this.#e.assignedElements();this.toggleAttribute("empty",l.length==0)}}getSelected(){return this.#e.assignedElements().reduce((s,l,e)=>(l.hasAttribute("aria-selected")&&s.push(l),s),new Array)}selectItems(...t){let s=this.#e.assignedElements();for(let l=0;l<t.length;l++){let e=t[l];s.indexOf(e)!=-1&&this.#l(e)}}#l(t){t.setAttribute("aria-selected","option"),t.classList.add(i.selectedClassName)}deselectItems(...t){let s=this.#e.assignedElements();for(let l=0;l<t.length;l++){let e=t[l];s.indexOf(e)!=-1&&this.#s(e)}}#s(t){t.removeAttribute("aria-selected"),t.classList.remove(i.selectedClassName)}#o(t){t.hasAttribute("aria-selected")?this.#s(t):this.#l(t)}clearSelection(){this.dispatchEvent(new CustomEvent("change",{detail:{newSelection:null,previousSelection:this.getSelected(),shift:!1,ctrl:!1,alt:!1}}))}};customElements.get(S)==null&&customElements.define(S,p);export{p as CollectionBrowserElement,x as CollectionBrowserParts};
